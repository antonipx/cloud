#!/bin/bash -e

ESX_HOST="70.0.0.67"
ESX_USER="root"
ESX_PATH="/vmfs/volumes/HDD"

cpus="2"
mem="4096"
data_disk="100GB"
type="ubuntu-64"
template="/vmfs/volumes/HDD/ubuntu_template/ubuntu_template_0.vmdk"
user="ubuntu"
pass="ubuntu"

usage() { echo "Usage: $0 $(gawk '/^\s*[a-z]*)/ { gsub(/)/,""); gsub(/\s/, "");  printf("|%s", $0); } END { printf("|\n") }' $0) <name>"; exit 1; }
check() { [ -x "$(command -v $1)" ] || { echo "Error: $1 is not installed, aborting"; exit 1; } }
for cmd in ssh scp sshpass; do check $cmd; done

case $1 in
    create)
        name=${2:?No VM name specified}
        ssh ${ESX_USER}@${ESX_HOST} <<EOF
mkdir ${ESX_PATH}/${name}
{
echo "config.version = \"8\""
echo "virtualHW.version = \"13\""
echo "vmci0.present = \"TRUE\""
echo "numvcpus = \"${cpus}\""
echo "memSize = \"${mem}\""
echo "bios.bootDelay = \"10000\""
echo "bios.bootRetry.delay = \"10\""
echo "usb.present = \"TRUE\""
echo "scsi0.virtualDev = \"pvscsi\""
echo "scsi0.present = \"TRUE\""
echo "scsi0:0.present = \"TRUE\""
echo "scsi0:0.deviceType = \"scsi-hardDisk\""
echo "scsi0:0.fileName = \"${name}_0.vmdk\""
echo "scsi0:1.present = \"TRUE\""
echo "scsi0:1.deviceType = \"scsi-hardDisk\""
echo "scsi0:1.fileName = \"${name}_1.vmdk\""
echo "ehci.present = \"TRUE\""
echo "ethernet0.virtualDev = \"vmxnet3\""
echo "ethernet0.networkName = \"VM Network\""
echo "ethernet0.addressType = \"generated\""
echo "ethernet0.present = \"TRUE\""
echo "displayName = \"${name}\""
echo "guestinfo.hostname = \"${name}\""
echo "guestOS = \"${type}\""
echo "tools.syncTime = \"TRUE\""
echo "cleanShutdown = \"TRUE\""
echo "hpet0.present = \"TRUE\""
echo "svga.present = \"TRUE\""
echo "pciBridge0.present = \"TRUE\""
echo "pciBridge4.present = \"TRUE\""
echo "pciBridge4.virtualDev = \"pcieRootPort\""
echo "pciBridge4.functions = \"8\""
echo "pciBridge5.present = \"TRUE\""
echo "pciBridge5.virtualDev = \"pcieRootPort\""
echo "pciBridge5.functions = \"8\""
echo "pciBridge6.present = \"TRUE\""
echo "pciBridge6.virtualDev = \"pcieRootPort\""
echo "pciBridge6.functions = \"8\""
echo "pciBridge7.present = \"TRUE\""
echo "pciBridge7.virtualDev = \"pcieRootPort\""
echo "pciBridge7.functions = \"8\""
echo "pciBridge0.pciSlotNumber = \"17\""
echo "pciBridge4.pciSlotNumber = \"21\""
echo "pciBridge5.pciSlotNumber = \"22\""
echo "pciBridge6.pciSlotNumber = \"23\""
echo "pciBridge7.pciSlotNumber = \"24\""
echo "scsi0.pciSlotNumber = \"160\""
echo "usb.pciSlotNumber = \"32\""
echo "ethernet0.pciSlotNumber = \"192\""
echo "ehci.pciSlotNumber = \"33\""
echo "vmci0.pciSlotNumber = \"34\""
echo "softPowerOff = \"FALSE\""
echo "nvram = \"${name}.nvram\""
} > "${ESX_PATH}/${name}/${name}.vmx"
vmkfstools -i ${template} "${ESX_PATH}/${name}/${name}_0.vmdk" -d thin
vmkfstools -c ${data_disk} -d thin "${ESX_PATH}/${name}/${name}_1.vmdk"
ID=\$(vim-cmd solo/registervm "${ESX_PATH}/${name}/${name}.vmx")
vim-cmd vmsvc/power.on \$ID
EOF
        until [ "$IP" ]
        do
            IP=$(ssh ${ESX_USER}@${ESX_HOST} <<EOF
vim-cmd vmsvc/getallvms | awk '{ if (\$2 ~ /${name}/) print \$1 }' | xargs -r vim-cmd vmsvc/get.summary \$ID | awk -F \" '/ipAddress/ { print \$2 }'
EOF
)
            echo "Waiting for IP..."
            sleep 15;
        done
        sshpass -p ${pass} ssh-copy-id ${user}@${IP}
        ssh -t ${user}@${IP} <<EOF
        sudo -i
        passwd -l ${user}
        h=\$(vmware-rpctool "info-get guestinfo.hostname")
        hostnamectl set-hostname \$h
        echo -e "127.0.0.1\t\$h" >> /etc/hosts
EOF
        scp run/ubuntu-run.sh ${user}@${IP}:
        ssh -t ${user}@${IP} <<EOF
sudo -i
chmod 755 /home/ubuntu/ubuntu-run.sh
/home/ubuntu/ubuntu-run.sh
EOF
        ;;
    delete)
        name=${2:?No VM name specified}
        ssh -t ${ESX_USER}@${ESX_HOST} <<EOF
ID=\$(vim-cmd vmsvc/getallvms | awk '{ if (\$2 ~ /${name}/) print \$1 }')
vim-cmd vmsvc/power.off \$ID
vim-cmd vmsvc/destroy \$ID
EOF
        ;;
    getip)
        name=${2:?No VM name specified}
        ssh -t ${ESX_USER}@${ESX_HOST} <<EOF
vim-cmd vmsvc/getallvms | awk '{ if (\$2 ~ /${name}/) print \$1 }' | xargs -r vim-cmd vmsvc/get.summary \$ID | awk -F \" '/ipAddress/ { print \$2 }'
EOF
        ;;
    ssh)
        name=${2:?No VM name specified}
        IP=$(ssh -t ${ESX_USER}@${ESX_HOST} <<EOF
vim-cmd vmsvc/getallvms | awk '{ if (\$2 ~ /${name}/) print \$1 }' | xargs -r vim-cmd vmsvc/get.summary \$ID | awk -F \" '/ipAddress/ { print \$2 }'
EOF
)
        ssh -t ${user}@${IP}
        ;;
    list)
        ssh -t ${ESX_USER}@${ESX_HOST} <<EOF
vim-cmd vmsvc/getallvms | awk '{ if(int(\$1) > 0) print \$2 }'
EOF
        ;;
    *)
        usage
        ;;
esac

