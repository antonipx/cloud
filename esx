#!/bin/bash -e

ESX_HOST="70.0.0.67"
ESX_USER="root"
ESX_PATH="/vmfs/volumes/HDD"

cpus="2"
mem="4096"
data_disk="100GB"
type="ubuntu-64"
template="/vmfs/volumes/HDD/ubuntu_template/ubuntu_template_0.vmdk"
script="ubuntu-run.sh"
user="ubuntu"
pass="ubuntu"

usage() { echo "Usage: $0 $(gawk '/^\s*[a-z]*)/ { gsub(/)/,""); gsub(/\s/, "");  printf("|%s", $0); } END { printf("|\n") }' $0) <name>"; exit 1; }
check() { [ -x "$(command -v $1)" ] || { echo "Error: $1 is not installed, aborting"; exit 1; } }
for cmd in ssh scp sshpass; do check $cmd; done

case $1 in
    create)
        name=${2:?No VM name specified}
        {
            echo "mkdir ${ESX_PATH}/${name}"
            echo "{"
            echo "echo 'config.version = \"8\"'"
            echo "echo 'virtualHW.version = \"13\"'"
            echo "echo 'vmci0.present = \"TRUE\"'"
            echo "echo 'numvcpus = \"${cpus}\"'"
            echo "echo 'memSize = \"${mem}\"'"
            echo "echo 'bios.bootDelay = \"10000\"'"
            echo "echo 'bios.bootRetry.delay = \"10\"'"
            echo "echo 'usb.present = \"TRUE\"'"
            echo "echo 'scsi0.virtualDev = \"pvscsi\"'"
            echo "echo 'scsi0.present = \"TRUE\"'"
            echo "echo 'scsi0:0.present = \"TRUE\"'"
            echo "echo 'scsi0:0.deviceType = \"scsi-hardDisk\"'"
            echo "echo 'scsi0:0.fileName = \"${name}_0.vmdk\"'"
            echo "echo 'scsi0:1.present = \"TRUE\"'"
            echo "echo 'scsi0:1.deviceType = \"scsi-hardDisk\"'"
            echo "echo 'scsi0:1.fileName = \"${name}_1.vmdk\"'"
            echo "echo 'ehci.present = \"TRUE\"'"
            echo "echo 'ethernet0.virtualDev = \"vmxnet3\"'"
            echo "echo 'ethernet0.networkName = \"VM Network\"'"
            echo "echo 'ethernet0.addressType = \"generated\"'"
            echo "echo 'ethernet0.present = \"TRUE\"'"
            echo "echo 'displayName = \"${name}\"'"
            echo "echo 'guestinfo.hostname = \"${name}\"'"
            echo "echo 'guestOS = \"${type}\"'"
            echo "echo 'tools.syncTime = \"TRUE\"'"
            echo "echo 'cleanShutdown = \"TRUE\"'"
            echo "echo 'hpet0.present = \"TRUE\"'"
            echo "echo 'svga.present = \"TRUE\"'"
            echo "echo 'pciBridge0.present = \"TRUE\"'"
            echo "echo 'pciBridge4.present = \"TRUE\"'"
            echo "echo 'pciBridge4.virtualDev = \"pcieRootPort\"'"
            echo "echo 'pciBridge4.functions = \"8\"'"
            echo "echo 'pciBridge5.present = \"TRUE\"'"
            echo "echo 'pciBridge5.virtualDev = \"pcieRootPort\"'"
            echo "echo 'pciBridge5.functions = \"8\"'"
            echo "echo 'pciBridge6.present = \"TRUE\"'"
            echo "echo 'pciBridge6.virtualDev = \"pcieRootPort\"'"
            echo "echo 'pciBridge6.functions = \"8\"'"
            echo "echo 'pciBridge7.present = \"TRUE\"'"
            echo "echo 'pciBridge7.virtualDev = \"pcieRootPort\"'"
            echo "echo 'pciBridge7.functions = \"8\"'"
            echo "echo 'pciBridge0.pciSlotNumber = \"17\"'"
            echo "echo 'pciBridge4.pciSlotNumber = \"21\"'"
            echo "echo 'pciBridge5.pciSlotNumber = \"22\"'"
            echo "echo 'pciBridge6.pciSlotNumber = \"23\"'"
            echo "echo 'pciBridge7.pciSlotNumber = \"24\"'"
            echo "echo 'scsi0.pciSlotNumber = \"160\"'"
            echo "echo 'usb.pciSlotNumber = \"32\"'"
            echo "echo 'ethernet0.pciSlotNumber = \"192\"'"
            echo "echo 'ehci.pciSlotNumber = \"33\"'"
            echo "echo 'vmci0.pciSlotNumber = \"34\"'"
            echo "echo 'softPowerOff = \"FALSE\"'"
            echo "echo 'nvram = \"${name}.nvram\"'"
            echo "} > '${ESX_PATH}/${name}/${name}.vmx'"
            echo "vmkfstools -i ${template} \"${ESX_PATH}/${name}/${name}_0.vmdk\" -d thin"
            echo "vmkfstools -c ${data_disk} -d thin \"${ESX_PATH}/${name}/${name}_1.vmdk\""
            echo "ID=\$(vim-cmd solo/registervm \"${ESX_PATH}/${name}/${name}.vmx\")"
            echo "vim-cmd vmsvc/power.on \$ID"
        } |  ssh -T ${ESX_USER}@${ESX_HOST}
        until [ "$IP" ]; do IP=$($0 getip ${name}); echo "Waiting for IP..."; sleep 15; done
        ssh-keygen -R ${IP}
        sshpass -p ${pass} ssh-copy-id ${user}@${IP}
        scp run/${script} ${user}@${IP}:/tmp
        {
            echo "sudo -i"
            echo "passwd -l ${user}"
            echo "h=\$(vmware-rpctool \"info-get guestinfo.hostname\")"
            echo "hostnamectl set-hostname \$h"
            echo "echo -e \"127.0.0.1\t\$h\" >> /etc/hosts"
            echo "chmod 755 /tmp/${script}"
            echo "/tmp/${script}"
        } | ssh -t ${user}@${IP} 
        ;;
    delete)
        {
            echo "ID=\$(vim-cmd vmsvc/getallvms | awk '{ if (\$2 ~ /${2:?No VM name specified}/) print \$1 }')"
            echo "vim-cmd vmsvc/power.off \$ID"
            echo "vim-cmd vmsvc/destroy \$ID"
        } | ssh -T ${ESX_USER}@${ESX_HOST} 
        ;;
    getip)
        echo "vim-cmd vmsvc/getallvms | awk '{ if (\$2 ~ /${2:?No VM name specified}/) print \$1 }' | xargs -r vim-cmd vmsvc/get.summary \$ID | awk -F \\\" '/ipAddress/ { print \$2 }'" | ssh -T ${ESX_USER}@${ESX_HOST} 
        ;;
    ssh)
        IP=$(${0} getip ${2:?No VM name specified})
        shift 2
        ssh -t ${user}@${IP} ${@}
        ;;
    list)
        echo "vim-cmd vmsvc/getallvms | awk '{ if(int(\$1) > 0) print \$2 }'" | ssh -T ${ESX_USER}@${ESX_HOST} 
        ;;
    *)
        usage
        ;;
esac

